name: Shadowsocks Server (Final Version)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [restart-shadowsocks]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 350 # 5 часов 50 минут

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y shadowsocks-libev qrencode lsof
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          chmod +x cloudflared-linux-amd64

      - name: Generate Config and Run Services
        run: |
          # --- ДАННЫЕ ДЛЯ СЕРВЕРА ---
          # !!! ЗАМЕНИ ПАРОЛЬ НА СВОЙ !!!
          SS_PASSWORD="YourStrongPasswordHere123"
          SS_PORT="8388"
          SS_METHOD="chacha20-ietf-poly1305"
          
          # Создаем конфиг
          cat << EOF > ss-config.json
          { "server":"0.0.0.0", "server_port":${SS_PORT}, "password":"${SS_PASSWORD}", "method":"${SS_METHOD}", "fast_open":true, "mode":"tcp_only" }
          EOF

          # Принудительно освобождаем порт перед запуском, чтобы избежать ошибки "Address already in use"
          sudo kill -9 $(sudo lsof -t -i:${SS_PORT}) 2>/dev/null || true
          sleep 2 # Даем время порту освободиться

          # Запускаем Shadowsocks и Cloudflared
          nohup ss-server -c ss-config.json &
          sleep 5
          nohup ./cloudflared-linux-amd64 tunnel run --token ${{ secrets.CF_TUNNEL_TOKEN }} &
          sleep 10

      - name: Display Connection Info
        run: |
          # --- ДАННЫЕ ДЛЯ КЛИЕНТА ---
          # !!! ЗАМЕНИ ЭТИ ДАННЫЕ НА СВОИ !!!
          DOMAIN="vpn.iksdev.live"
          SS_PASSWORD="YourStrongPasswordHere123"

          # Убедись, что пароль здесь ТОЧНО СОВПАДАЕТ с паролем из шага выше!
          SS_METHOD="chacha20-ietf-poly1305"
          
          # Формируем SS URI
          SIP002_URI_PART=$(echo -n "${SS_METHOD}:${SS_PASSWORD}" | base64 | tr -d '\n')
          SS_URI="ss://${SIP002_URI_PART}@${DOMAIN}:443#GitHub-Shadowsocks"
          
          echo "========================================================================="
          echo "STATIC SHADOWSOCKS Server is ready! This config is permanent."
          echo ""
          echo "--- Connection Details ---"
          echo "Server Address: ${DOMAIN}"
          echo "Port: 443"
          echo "Password: ${SS_PASSWORD}"
          echo "Encryption Method: ${SS_METHOD}"
          echo ""
          echo "--- SS URI (copy this and import) ---"
          echo "${SS_URI}"
          echo ""
          echo "--- QR Code (scan this once) ---"
          qrencode -t ansiutf8 "${SS_URI}"
          echo "========================================================================="
          
      - name: Keep Alive
        run: |
          sleep 20700 # ~5 часов 45 минут

      - name: Trigger Next Run (Auto-Restart)
        # --- ГЛАВНОЕ ИЗМЕНЕНИЕ ---
        # Этот шаг сработает, ТОЛЬКО ЕСЛИ предыдущие шаги были успешными.
        # Он НЕ сработает, если ты нажмешь "Cancel" или если будет ошибка.
        if: success()
        run: |
          echo "Workflow completed successfully. Triggering next run..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.VDS_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "restart-shadowsocks"}'
